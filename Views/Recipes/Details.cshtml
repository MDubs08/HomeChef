@model HomeChef.Models.Recipe

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div id="recipeDetails" class="container">
    <div class="preview col-md-6">
        <div class="preview-pic tab-content">
            <div id="recipeImage" class="wrapper">
                <span id="isFavorite" class="glyphicon glyphicon-heart-empty"></span>
                <img src="~/Content/Pictures/Lasanga.jpg">
            </div>
        </div>
        <div class="row" align="center" id="socialMediaButtons">
            <img src="~/Content/Pictures/SocialMediaIcons/Facebook-icon-32.png" />
            <img src="~/Content/Pictures/SocialMediaIcons/Instagram-icon-32.png" />
            <img src="~/Content/Pictures/SocialMediaIcons/Pinterest-icon-32.png" />
            <img src="~/Content/Pictures/SocialMediaIcons/Twitter-icon-32.png" />
            <img src="~/Content/Pictures/SocialMediaIcons/Reddit-icon-32.png" />
            <img src="~/Content/Pictures/SocialMediaIcons/Linkedin-icon-32.png" />
            <img src="~/Content/Pictures/SocialMediaIcons/Google-Plus-icon-32.png" />
            <img src="~/Content/Pictures/SocialMediaIcons/Email-icon-32.png" />
        </div>
    </div>
    <div id="recipeDetails" class="col-md-6">
        <h4 id="recipeTitle" align="center">@Html.DisplayFor(model => model.Name)</h4>
        <div id="rating" align="center">
            <div id="stars">
                <span class="glyphicon glyphicon-star"></span>
                <span class="glyphicon glyphicon-star"></span>
                <span class="glyphicon glyphicon-star"></span>
                <span class="glyphicon glyphicon-star"></span>
                <span class="glyphicon glyphicon-star-empty"></span>
            </div>
            <span class="review-no">41 reviews</span>
        </div>
        <hr />
        <div id="recipeDescription" class="row">
            <p>@Html.DisplayFor(model => model.Description)</p>
        </div>
        <hr />
        <div id="recipeDetailsFooter" class="row">
            <div class="col-sm-4">
                <h5 id="recipeDetails" align="center">Cook Time</h5>
                <hr />
                <div class="col-sm-12">
                    <h5 align="center">@Html.DisplayFor(model => model.LengthToMake) Minutes</h5>
                </div>
            </div>
            <div class="col-sm-4">
                <h5 id="recipeDetails" align="center">Serving Size</h5>
                <hr />
                <div class="col-sm-12">
                    <h5 align="center">@Html.DisplayFor(model => model.ServingSize) People</h5>
                </div>
            </div>
            <div class="col-sm-4">
                <h5 id="recipeDetails" align="center">Prep Time</h5>
                <hr />
                <div class="col-sm-12">
                    <h5 align="center">@Html.DisplayFor(model => model.Instruction.PrepTime) Minutes</h5>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="recipeDetails" class="container">
    <div id="recipeTabBox" class="col-sm-12">
        <div id="recipeCards"class="card">
            <ul class="nav nav-tabs" role="tablist" id="recipeTabs">
                <li role="presentation" class="active"><a href="#Ingredients" aria-controls="Ingredients" role="tab" data-toggle="tab">Ingredients</a></li>
                <li role="presentation"><a href="#Instructions" aria-controls="Instructions" role="tab" data-toggle="tab">Instructions</a></li>
                <li role="presentation"><a href="#Reviews" aria-controls="Reviews" role="tab" data-toggle="tab">Reviews</a></li>
                <li role="presentation"><a href="#Similar" aria-controls="Similar" role="tab" data-toggle="tab">Similar Recipes</a></li>
            </ul>
            <div class="tab-content" id="recipeContent">
                <div role="tabpanel" class="tab-pane active" id="Ingredients">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</div>
                <div role="tabpanel" class="tab-pane" id="Instructions">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</div>
                <div role="tabpanel" class="tab-pane" id="Reviews">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</div>
                <div role="tabpanel" class="tab-pane" id="Similar">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passage..</div>
            </div>
        </div>
    </div>
</div>



<div>
    <h4>Recipe</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Image.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Image.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Ingredient.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Ingredient.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Instruction.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Instruction.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Meal.MealTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Meal.MealTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Video.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Video.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ServingSize)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ServingSize)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LengthToMake)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LengthToMake)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Rating)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Rating)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.isFavorite)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.isFavorite)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
