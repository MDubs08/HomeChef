@model HomeChef.Models.Recipe

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Recipe</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServingSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServingSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServingSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LengthToMake, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LengthToMake, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LengthToMake, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-horizontal">
        <h3>Ingredients</h3>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.RecipeIngredient.Ingredient.Quantity, "Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipeIngredient.Ingredient.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipeIngredient.Ingredient.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipeIngredient.Ingredient.Measurement, "Measurement", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.RecipeIngredient.Ingredient.Measurement, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RecipeIngredient.Ingredient.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipeIngredient.Ingredient.Name, "Ingredient", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipeIngredient.Ingredient.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipeIngredient.Ingredient.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="ingredientRow">

        </div>
        <script>
            $("addIngredient").click(function () {
                $.ajax({
                    url: this.href,
                    cache: false,
                    success: function (html) { $("#ingredientRow").append(html); }
                });
                return false;
            });
        </script>
        <div class="row">
            <div class="col-md-offset-2 col-md-2">
                <a class="btn icon-btn btn-success" id="AddIngredient" name="AddIngredient" onclick="AddIngredient()"><span class="btn glyphicon btn-glyphicon glyphicon-plus img-circle text-success"></span>Add Ingredient</a>
            </div>
        </div>
    </div>

    <div class="form-horizontal">
        <h3>Instructions</h3>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Instruction.Name, "Instructions Label", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Instruction.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Instruction.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Instruction.PrepTime, "Prep Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Instruction.PrepTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Instruction.PrepTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Instruction.Step.Steps, "Steps", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Instruction.Step.Steps, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Instruction.Step.Steps, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="stepsRow">

        </div>
        <script>
            $("addSteps").click(function () {
                $.ajax({
                    type: 'GET',
                    dataType: 'json',
                    url: this.href,
                    cache: false,
                    success: function (html) { $("#stepsRow").append(html); }
                });
                return false;
            });
        </script>
        <div class="row">
            <div class="col-md-offset-2 col-md-2">
                <a class="btn icon-btn btn-success" id="addSteps" value="AddSteps"><span class="btn glyphicon btn-glyphicon glyphicon-plus img-circle text-success" value="AddSteps"></span>Add Steps</a>
            </div>
        </div>
    </div>

    <div class="form-horizontal">
        <h3>Images</h3>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Image.Name, "Image Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image.ImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Image.ImageFile, new { type = "file", name = "ImageUpload", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image.ImageFile, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Upload" class="btn btn-default" />
            </div>
        </div>

        <ol>
            <li class="liImage">
                <input type="file" id="imageToUpload" name="ImageUpload" />
                <span class="field-validation-error" id="spanImage"></span>
            </li>
        </ol>
        <input type="submit" id="ImageUploadButton" value="Upload" />
        <script type="text/javascript">
            function GetFileSize(imageid) {
                try{
                    var fileSize = 0;
                    if ($.browser.msie){
                        var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                        var imagePath = $("#" + imageid)[0].value;
                        var objImage = objFSO.getFile(imagePath);
                        var imageSize = objImage.size;
                        imageSize = imageSize / 1048576;
                    }
                    return fileSize;
                }
                catch (e) {
                    alert("Error is:" + e);
                }
            }

            function getNameFromPath(strFilepath) {
                var objRE = new RegExp(/([^\/\\]+)$/);
                var strName = objRE.exec(strFilepath);

                if (strName == null) {
                    return null;
                } else {
                    return strName[0];
                }
            }

            $("#ImageUploadButton").live("click", function () {
                if ($('#imageToUpload').val() == "") {
                    $("#spanImage").html("Please Upload File");
                    return false;
                } else {
                    return checkImage();
                }
            });

            function checkImage() {
                var image = getNameFromPath($("#imageToUpload").val());
                if (image != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'jpg':
                        case 'png':
                        case 'jpeg':
                        case 'pdf':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }
                if (flag == false) {
                    $("#spanImage").text("You can upload only jpg, png, jpeg, pdf extension file");
                    return false;
                } else {
                    var size = GetFileSize('imageToUpload');
                    if (size > 3) {
                        $("#spanImage").text("You can upload fild up to 3 MB");
                        return false;
                    } else {
                        $("#spanImage").text("");
                    }
                }
            }

            $(function () {
                $("#imageToUpload").change(function () {
                    checkImage();
                });
            });
        </script>
        
    </div>

    <div class="form-horizontal">
        <h3>Videos</h3>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Video.Name, "Video Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Video.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Video.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Video.VideoFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Video.VideoFile, new { type = "file", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Video.VideoFile, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-horizontal">
        <h3>Categories</h3>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Meal.MealTime, "Meal Time Frame", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Meal.MealTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Meal.MealTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Meal.MealType, "Meal Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Meal.MealType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Meal.MealType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Meal.isHoliday, "Holiday Meal", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Meal.isHoliday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Meal.isHoliday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Meal.HolidayMeal, "Holiday Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Meal.HolidayMeal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Meal.HolidayMeal, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
